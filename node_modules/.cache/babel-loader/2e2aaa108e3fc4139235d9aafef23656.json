{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/codethedream/Portfolio/src/Context/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nexport const PortfolioContext = /*#__PURE__*/createContext({\n  studies: [],\n  experience: [],\n  skills: [],\n  projects: []\n});\nexport const Provider = props => {\n  _s();\n\n  const [studies, setStudies] = useState([]);\n  const [experience, setExperience] = useState([]);\n  const [skills, setSkills] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const url = process.env.REACT_APP_URL;\n\n  const fetchAirtable = num => {\n    fetch(`${url}${num}${apiKey}`).then(response => response.json()).then(data => {\n      (num === 1 ? setStudies : num === 2 ? setExperience : num === 3 ? setSkills : setProjects)(data.records.map(d => {\n        return { ...d.fields,\n          id: d.id\n        };\n      }));\n    });\n  };\n\n  useEffect(() => {\n    for (let i = 1; i <= 4; i++) {\n      fetchAirtable(i);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(PortfolioContext.Provider, {\n    value: {\n      studies,\n      experience,\n      skills,\n      projects\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(Provider, \"BmabEDxL9Buqz9sgAFc7Y7BLX4k=\");\n\n_c = Provider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provider\");","map":{"version":3,"sources":["/Users/macbook/Desktop/codethedream/Portfolio/src/Context/index.tsx"],"names":["React","createContext","useState","useEffect","PortfolioContext","studies","experience","skills","projects","Provider","props","setStudies","setExperience","setSkills","setProjects","apiKey","process","env","REACT_APP_API_KEY","url","REACT_APP_URL","fetchAirtable","num","fetch","then","response","json","data","records","map","d","fields","id","i","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AASA,OAAO,MAAMC,gBAAgB,gBAAGH,aAAa,CAAW;AACtDI,EAAAA,OAAO,EAAE,EAD6C;AAEtDC,EAAAA,UAAU,EAAE,EAF0C;AAGtDC,EAAAA,MAAM,EAAE,EAH8C;AAItDC,EAAAA,QAAQ,EAAE;AAJ4C,CAAX,CAAtC;AAOP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAgB;AAAA;;AAEtC,QAAM,CAAEL,OAAF,EAAWM,UAAX,IAA0BT,QAAQ,CAAiB,EAAjB,CAAxC;AACA,QAAM,CAAEI,UAAF,EAAcM,aAAd,IAAgCV,QAAQ,CAAoB,EAApB,CAA9C;AACA,QAAM,CAAEK,MAAF,EAAUM,SAAV,IAAwBX,QAAQ,CAAgB,EAAhB,CAAtC;AACA,QAAM,CAAEM,QAAF,EAAYM,WAAZ,IAA4BZ,QAAQ,CAAkB,EAAlB,CAA1C;AAEA,QAAMa,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA3B;AACA,QAAMC,GAAG,GAAGH,OAAO,CAACC,GAAR,CAAYG,aAAxB;;AAEA,QAAMC,aAAa,GAAIC,GAAD,IAAsB;AAC1CC,IAAAA,KAAK,CAAE,GAAEJ,GAAI,GAAEG,GAAI,GAAEP,MAAO,EAAvB,CAAL,CACCS,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,IAAI,IAAI;AACZ,OAAEL,GAAG,KAAK,CAAR,GAAYX,UAAZ,GACAW,GAAG,KAAK,CAAR,GAAYV,aAAZ,GACAU,GAAG,KAAK,CAAR,GAAYT,SAAZ,GAAwBC,WAF1B,EAGEa,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAkBC,CAAD,IAAY;AAC7B,eAAO,EAAC,GAAGA,CAAC,CAACC,MAAN;AAAcC,UAAAA,EAAE,EAAEF,CAAC,CAACE;AAApB,SAAP;AACD,OAFC,CAHF;AAMD,KATD;AAUD,GAXD;;AAaA7B,EAAAA,SAAS,CAAC,MAAM;AACd,SAAK,IAAI8B,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,CAArB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BZ,MAAAA,aAAa,CAACY,CAAD,CAAb;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,oBAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAChC5B,MAAAA,OADgC;AAEhCC,MAAAA,UAFgC;AAGhCC,MAAAA,MAHgC;AAIhCC,MAAAA;AAJgC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMIE,KAAK,CAACwB,QANV,CADF;AAUD,CAvCM;;GAAMzB,Q;;KAAAA,Q","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport interface IContext {\n  studies: Array<Studies>;\n  experience: Array<Experience>;\n  skills: Array<Skills>;\n  projects: Array<Projects>;\n}\n\nexport const PortfolioContext = createContext<IContext>({\n  studies: [],\n  experience: [],\n  skills: [],\n  projects: []\n});\n\nexport const Provider = (props: any) => {\n\n  const [ studies, setStudies ] = useState<Array<Studies>>([]);\n  const [ experience, setExperience ] = useState<Array<Experience>>([]);\n  const [ skills, setSkills ] = useState<Array<Skills>>([]);\n  const [ projects, setProjects ] = useState<Array<Projects>>([]);\n  \n  const apiKey = process.env.REACT_APP_API_KEY;\n  const url = process.env.REACT_APP_URL;\n\n  const fetchAirtable = (num: number):void => {\n    fetch(`${url}${num}${apiKey}`)\n    .then(response => response.json())\n    .then(data => {\n      ( num === 1 ? setStudies :\n        num === 2 ? setExperience :\n        num === 3 ? setSkills : setProjects\n      )(data.records.map((d: any) => {\n        return {...d.fields, id: d.id};  \n      }))\n    })\n  }\n\n  useEffect(() => {\n    for (let i = 1; i <= 4; i++) {\n      fetchAirtable(i)\n    }\n  }, []);\n\n  return (\n    <PortfolioContext.Provider value={{\n      studies,\n      experience,\n      skills,\n      projects\n    }}>\n      { props.children }\n    </PortfolioContext.Provider>\n  );\n}"]},"metadata":{},"sourceType":"module"}