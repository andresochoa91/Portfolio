{"ast":null,"code":"var _jsxFileName = \"/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-2-andresochoa91/portfolio/src/App.tsx\";\nimport React, { useState } from 'react';\nimport Profile from './Profile'; // import { Todo } from './types'; //When using types.ts \n\nconst initialTodos = [{\n  text: \"Walk the dog\",\n  complete: true\n}, {\n  text: \"Write app\",\n  complete: false\n}];\n\nconst App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const toggleTodo = selectedTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Profile, {\n    todo: todos[0],\n    toggleTodo: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Profile, {\n    todo: todos[1],\n    toggleTodo: toggleTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/andres/Desktop/codeTheDream/assignments/front-end2/react-section-2-andresochoa91/portfolio/src/App.tsx"],"names":["React","useState","Profile","initialTodos","text","complete","App","todos","setTodos","toggleTodo","selectedTodo","newTodos","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;;AAGA,MAAMC,YAAyB,GAAG,CAChC;AAAEC,EAAAA,IAAI,EAAE,cAAR;AAAwBC,EAAAA,QAAQ,EAAE;AAAlC,CADgC,EAEhC;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,QAAQ,EAAE;AAA/B,CAFgC,CAAlC;;AAKA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACE,YAAD,CAAlC;;AAEA,QAAMM,UAAsB,GAAGC,YAAY,IAAI;AAC7C,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACjC,UAAIA,IAAI,KAAKH,YAAb,EAA2B;AACzB,eAAO,EACL,GAAGG,IADE;AAELR,UAAAA,QAAQ,EAAE,CAACQ,IAAI,CAACR;AAFX,SAAP;AAID;;AACD,aAAOQ,IAAP;AACD,KARgB,CAAjB;AASAL,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD,GAXD;;AAaA,sBACE,uDACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEJ,KAAK,CAAC,CAAD,CAApB;AAAyB,IAAA,UAAU,EAAGE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEF,KAAK,CAAC,CAAD,CAApB;AAAyB,IAAA,UAAU,EAAGE,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAtBD;;AAwBA,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Profile from './Profile'; \n// import { Todo } from './types'; //When using types.ts \n\n\nconst initialTodos: Array<Todo> = [\n  { text: \"Walk the dog\", complete: true },\n  { text: \"Write app\", complete: false }\n];\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const toggleTodo: ToggleTodo = selectedTodo => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete\n        }\n      }\n      return todo;\n    })\n    setTodos(newTodos);\n  }\n\n  return (\n    <>\n      <Profile todo={todos[0]} toggleTodo={ toggleTodo }/>\n      <Profile todo={todos[1]} toggleTodo={ toggleTodo }/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}