{"ast":null,"code":"// import React, { createContext, useState, useEffect } from 'react';\n// export interface IContext {\n//   studies: Array<Studies>;\n//   experience: Array<Experience>;\n//   skills: Array<Skills>;\n//   projects: Array<Projects>;\n// }\n// export const PortfolioContext = createContext<IContext>({\n//   studies: [],\n//   experience: [],\n//   skills: [],\n//   projects: []\n// });\n// export const Provider = (props: any) => {\n//   // const [ studies, setStudies ] = useState<Array<Studies>>([]);\n//   // const [ experience, setExperience ] = useState<Array<Experience>>([]);\n//   // const [ skills, setSkills ] = useState<Array<Skills>>([]);\n//   // const [ projects, setProjects ] = useState<Array<Projects>>([]);\n//   // const apiKey = process.env.REACT_APP_API_KEY;\n//   // const url = process.env.REACT_APP_URL;\n//   // useEffect(() => {\n//   //   for (let i = 1; i <= 4; i++) {\n//   //     fetch(`${url}${i}${apiKey}`)\n//   //     .then(response => response.json())\n//   //     .then(data => {\n//   //       ( i === 1 ? setStudies :\n//   //         i === 2 ? setExperience :\n//   //         i === 3 ? setSkills : setProjects\n//   //       )(data.records.map((d: any) => {\n//   //         return {...d.fields, id: d.id};  \n//   //       }))\n//   //     })\n//   //   }\n//   // }, [apiKey, url]);\n//   return (\n//     <PortfolioContext.Provider value={{\n//       studies,\n//       experience,\n//       skills,\n//       projects\n//     }}>\n//       { props.children }\n//     </PortfolioContext.Provider>\n//   );\n// }","map":{"version":3,"sources":["/Users/andres/Desktop/codethedream/Portfolio/src/Context/index.tsx"],"names":[],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { createContext, useState, useEffect } from 'react';\n\n// export interface IContext {\n//   studies: Array<Studies>;\n//   experience: Array<Experience>;\n//   skills: Array<Skills>;\n//   projects: Array<Projects>;\n// }\n\n// export const PortfolioContext = createContext<IContext>({\n//   studies: [],\n//   experience: [],\n//   skills: [],\n//   projects: []\n// });\n\n// export const Provider = (props: any) => {\n\n//   // const [ studies, setStudies ] = useState<Array<Studies>>([]);\n//   // const [ experience, setExperience ] = useState<Array<Experience>>([]);\n//   // const [ skills, setSkills ] = useState<Array<Skills>>([]);\n//   // const [ projects, setProjects ] = useState<Array<Projects>>([]);\n  \n//   // const apiKey = process.env.REACT_APP_API_KEY;\n//   // const url = process.env.REACT_APP_URL;\n\n//   // useEffect(() => {\n//   //   for (let i = 1; i <= 4; i++) {\n//   //     fetch(`${url}${i}${apiKey}`)\n//   //     .then(response => response.json())\n//   //     .then(data => {\n//   //       ( i === 1 ? setStudies :\n//   //         i === 2 ? setExperience :\n//   //         i === 3 ? setSkills : setProjects\n//   //       )(data.records.map((d: any) => {\n//   //         return {...d.fields, id: d.id};  \n//   //       }))\n//   //     })\n//   //   }\n//   // }, [apiKey, url]);\n\n//   return (\n//     <PortfolioContext.Provider value={{\n//       studies,\n//       experience,\n//       skills,\n//       projects\n//     }}>\n//       { props.children }\n//     </PortfolioContext.Provider>\n//   );\n// }"]},"metadata":{},"sourceType":"module"}